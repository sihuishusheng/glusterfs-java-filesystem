<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

<!--     <parent> -->
<!--         <groupId>org.springframework.boot</groupId> -->
<!--         <artifactId>spring-boot-starter-parent</artifactId> -->
<!--         <version>1.5.2.RELEASE</version> -->
<!--         <relativePath/> -->
<!--     </parent> -->

	<groupId>github-dot-com.stackdocker.glusterfs</groupId>
	<artifactId>objectstorage-webapp</artifactId>
    <version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<description>Object Storage web app for Vert-x3</description>

    <properties>
        <main.basedir>${basedir}/../..</main.basedir>
        <main.verticle>objectstack.web.ServerVerticle</main.verticle>
        <glusterfs.server>172.17.4.200</glusterfs.server>
        <glusterfs.volume>foo</glusterfs.volume>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <it.skip>true</it.skip>
        <skipTests>true</skipTests>
    </properties>

	<dependencyManagement>
	     <dependencies>
	        <!-- Override Spring Data release train provided by Spring Boot -->
	        <dependency>
	            <groupId>org.springframework.data</groupId>
	            <artifactId>spring-data-releasetrain</artifactId>
	            <version>Gosling-SR6</version>
	            <scope>import</scope>
	            <type>pom</type>
	        </dependency>	     
	        <dependency>
	            <!-- Import dependency management from Spring Boot -->
	            <groupId>org.springframework.boot</groupId>
	            <artifactId>spring-boot-dependencies</artifactId>
	            <version>1.5.2.RELEASE</version>
	            <type>pom</type>
	            <scope>import</scope>
	        </dependency>
	    </dependencies>
	</dependencyManagement>

	<dependencies>
	    <!-- vertx -->
        <dependency>
          <groupId>io.vertx</groupId>
          <artifactId>vertx-core</artifactId>
          <version>3.4.1</version>
        </dependency>

        <dependency>
          <groupId>io.vertx</groupId>
          <artifactId>vertx-web</artifactId>
          <version>3.4.1</version>
        </dependency>

	    <dependency>
	      <groupId>io.vertx</groupId>
	      <artifactId>vertx-web-templ-thymeleaf</artifactId>
	      <version>3.4.1</version>
	      <classifier>shaded</classifier>
	    </dependency>

	    <dependency>
	      <groupId>io.vertx</groupId>
	      <artifactId>vertx-dropwizard-metrics</artifactId>
	      <version>3.4.1</version>
	    </dependency>
	
	    <dependency>
	      <groupId>io.vertx</groupId>
	      <artifactId>vertx-auth-jwt</artifactId>
	      <version>3.4.1</version>
	    </dependency>
	    
	    <dependency>
	      <groupId>io.netty</groupId>
	      <artifactId>netty-tcnative-boringssl-static</artifactId>
	      <version>1.1.33.Fork26</version>
<!-- 	      <version>2.0.0.final</version> -->
	    </dependency>

        <dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.24</version>
		</dependency>

        <dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.7.24</version>
		</dependency>
		
		<dependency>
		    <groupId>org.attoparser</groupId>
		    <artifactId>attoparser</artifactId>
		    <version>2.0.3.RELEASE</version>
		</dependency>
		
        <!-- spring boot -->
<!-- 	    <dependency> -->
<!-- 			<groupId>org.springframework.boot</groupId> -->
<!-- 			<artifactId>spring-boot-starter-batch</artifactId> -->
<!-- 		</dependency> -->
<!-- 		<dependency> -->
<!-- 			<groupId>org.springframework.boot</groupId> -->
<!-- 			<artifactId>spring-boot-starter-data-rest</artifactId> -->
<!-- 		</dependency> -->
<!-- 		<dependency> -->
<!-- 			<groupId>org.springframework.boot</groupId> -->
<!-- 			<artifactId>spring-boot-starter-web</artifactId> -->
<!-- 		</dependency> -->
<!--         <dependency> -->
<!--             <groupId>org.springframework.boot</groupId> -->
<!--             <artifactId>spring-boot-starter-actuator</artifactId> -->
<!--         </dependency> -->
<!--         <dependency> -->
<!--             <groupId>org.springframework.boot</groupId> -->
<!--             <artifactId>spring-boot-starter-thymeleaf</artifactId> -->
<!--         </dependency> -->

<!-- 		<dependency> -->
<!-- 			<groupId>org.springframework.boot</groupId> -->
<!-- 			<artifactId>spring-boot-starter-test</artifactId> -->
<!-- 			<scope>test</scope> -->
<!-- 		</dependency> -->
<!-- 		<dependency> -->
<!-- 		  <groupId>org.springframework.boot</groupId> -->
<!-- 		  <artifactId>spring-boot-devtools</artifactId> -->
<!-- 		  <optional>true</optional> -->
<!-- 		</dependency> -->
        
<!--         <dependency> -->
<!--             <groupId>org.springframework</groupId> -->
<!--             <artifactId>spring-web</artifactId> -->
<!--         </dependency> -->
        
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>5.4.0.Final</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.8.7</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.14</version>
            <scope>provided</scope>
        </dependency>
		
		<!-- glusterfs -->
        <dependency>
            <groupId>com.peircean.glusterfs</groupId>
            <artifactId>glusterfs-java-filesystem</artifactId>
            <version>1.0.5-SNAPSHOT</version>
        </dependency>
    </dependencies>
	
    <build>
        <finalName>${project.artifactId}</finalName>
<!--         <directory>${project.basedir}/target</directory> -->
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
                <excludes>
                    <exclude>**/*.md</exclude>
                </excludes>
            </resource>
        </resources>
 
	    <pluginManagement>
	      <plugins>
	        <!-- We specify the Maven compiler plugin as we need to set it to Java 1.8 -->
	        <plugin>
	          <artifactId>maven-compiler-plugin</artifactId>
	          <version>3.1</version>
	          <configuration>
	            <source>1.8</source>
	            <target>1.8</target>
	            <compilerArgs>
	              <arg>-Acodetrans.output=${project.basedir}/src/main</arg>
	              <arg>-Acodetrans.config=${basedir}/codetrans-config.json</arg>
	            </compilerArgs>
	          </configuration>
	        </plugin>
	      </plugins>
	    </pluginManagement>
 
        <plugins>
		    <plugin>
		      <groupId>org.apache.maven.plugins</groupId>
		      <artifactId>maven-failsafe-plugin</artifactId>
		      <version>2.19.1</version>
		      <configuration>
		        <skip>${it.skip}</skip>
		      </configuration>
		    </plugin>
        
			<plugin>
			  <groupId>org.apache.maven.plugins</groupId>
			  <artifactId>maven-shade-plugin</artifactId>
			  <version>3.0.0</version>
			  <executions>
			    <execution>
			      <phase>package</phase>
			      <goals>
			        <goal>shade</goal>
			      </goals>
			      <configuration>
			        <transformers>
			          <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
			            <manifestEntries>
			              <Main-Class>io.vertx.core.Launcher</Main-Class>
			              <Main-Verticle>${main.verticle}</Main-Verticle>
			            </manifestEntries>
			          </transformer>
		              <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
		                <resource>META-INF/services/io.vertx.core.spi.VerticleFactory</resource>
		              </transformer>			          
	                  <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
	                    <resource>META-INF/spring.handlers</resource>
	                  </transformer>
	                  <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
	                    <resource>META-INF/spring.schemas</resource>
	                  </transformer>
	                  <transformer implementation="org.apache.maven.plugins.shade.resource.XmlAppendingTransformer">
	                    <resource>META-INF/magic.xml</resource>
	                    <!-- Add this to enable loading of DTDs
	                    <ignoreDtd>false</ignoreDtd>
	                    -->
	                  </transformer>
	                  <transformer implementation="org.apache.maven.plugins.shade.resource.ResourceBundleAppendingTransformer">
	                    <!-- the base name of the resource bundle, a fully qualified class name -->
	                    <basename></basename>
	                  </transformer>
	                  <transformer implementation="org.apache.maven.plugins.shade.resource.DontIncludeResourceTransformer">
	                    <resource>.txt</resource>
	                  </transformer>
	                  <transformer implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
	                    <resource>templates/*</resource>
	                    <file>README.md</file>
	                  </transformer>
<!-- 			          <transformer implementation="org.springframework.boot.maven.PropertiesMergingResourceTransformer"> -->
<!-- 			            <resource>META-INF/spring.factories</resource> -->
<!--                       </transformer> -->
                      <transformer implementation="org.apache.maven.plugins.shade.resource.ComponentsXmlResourceTransformer"/>
                      <transformer implementation="org.apache.maven.plugins.shade.resource.PluginXmlResourceTransformer"/>
                      <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
			        </transformers>
			        <artifactSet/>
			        <outputFile>${project.build.directory}/${project.artifactId}-${project.version}-fat.jar</outputFile>
			      </configuration>
			    </execution>
			  </executions>
			</plugin>
		    
<!--             <plugin> -->
<!--                 <groupId>org.springframework.boot</groupId> -->
<!--                 <artifactId>spring-boot-maven-plugin</artifactId> -->
<!-- 			      <executions> -->
<!-- 			        <execution> -->
<!-- 			          <id>pre-integration-test</id> -->
<!-- 			          <goals> -->
<!-- 			            <goal>start</goal> -->
<!-- 			          </goals> -->
<!-- 			          <configuration> -->
<!-- 			            <skip>${it.skip}</skip> -->
<!-- 			          </configuration> -->
<!-- 			        </execution> -->
<!-- 			        <execution> -->
<!-- 			          <id>post-integration-test</id> -->
<!-- 			          <goals> -->
<!-- 			            <goal>stop</goal> -->
<!-- 			          </goals> -->
<!-- 			          <configuration> -->
<!-- 			            <skip>${it.skip}</skip> -->
<!-- 			          </configuration> -->
<!-- 			        </execution> -->
<!-- 			      </executions> -->
<!--             </plugin> -->

            <!-- https://github.com/spotify/docker-maven-plugin -->
		    <plugin>
		      <groupId>com.spotify</groupId>
		      <artifactId>docker-maven-plugin</artifactId>
		      <version>0.4.13</version>
		      <configuration>
		        <imageName>tangfeixiong/mock-object-storage</imageName>
		        <dockerDirectory>${project.basedir}/src/main/docker/spotify-dot-com</dockerDirectory>
		        <resources>
		           <resource>
		             <targetPath>/</targetPath>
		             <directory>${project.build.directory}</directory>
		             <include>${project.build.finalName}.jar</include>
		           </resource>
		        </resources>
		      </configuration>
		    </plugin>
            
            <!-- https://github.com/fabric8io/docker-maven-plugin -->
			<plugin>
             <groupId>io.fabric8</groupId>
             <artifactId>docker-maven-plugin</artifactId>
             <version>0.20.0</version>
             <extensions>true</extensions>
			 <configuration>
			   <images>
			     <image>
			       <name>tangfeixiong/mock-object-storage</name>
			       <build>
			         <dockerFileDir>${project.basedir}/src/main/docker/fabric8-dot-io</dockerFileDir>
			         <assembly>
                       <descriptorRef>artifact-with-dependencies</descriptorRef>
                     </assembly>
			       </build>
			     </image>
			   </images>
			 </configuration>
			</plugin>

            <!-- https://github.com/fabric8io/fabric8-maven-plugin -->
		    <plugin>
		      <groupId>io.fabric8</groupId>
		      <artifactId>fabric8-maven-plugin</artifactId>
		      <version>3.2.28</version>	
		      <configuration>
		        <resources>
		          <labels>
		            <all>
		              <testProject>spring-boot-glusterfs-os-ext</testProject>
		            </all>
		          </labels>
		        </resources>
		        
			    <images>
			      <image>
			        <name>tangfeixiong/mock-object-storage</name>
			        <build>
			          <dockerFileDir>${project.basedir}/src/main/docker/fabric8-dot-io</dockerFileDir>
			          <assembly>
                        <descriptorRef>artifact-with-dependencies</descriptorRef>
                      </assembly>
			        </build>
			      </image>
			    </images>
		
		        <generator>
		          <config>
		            <spring-boot>
		              <color>always</color>
		            </spring-boot>
		          </config>
		        </generator>
		        
		        <enricher>
		          <excludes>
		            <exclude>build</exclude>
		          </excludes>
		          <config>
		            <fmp-service>
		              <type>NodePort</type>
		            </fmp-service>
		          </config>
		        </enricher>
		      </configuration>
		
		      <executions>
		        <execution>
		          <goals>
		            <goal>resource</goal>
		            <goal>build</goal>
		            <goal>helm</goal>
		          </goals>
		        </execution>
		      </executions>
		    </plugin>

<!-- 	        <plugin> -->
<!-- 	            <groupId>io.fabric8</groupId> -->
<!-- 	            <artifactId>vertx-maven-plugin</artifactId> -->
<!-- 	            <version>1.0.6</version> -->
<!-- 	            <executions> -->
<!-- 	                <execution> -->
<!-- 	                    <id>vmp</id> -->
<!-- 	                    <goals> -->
<!-- 	                        <goal>initialize</goal> -->
<!-- 	                        <goal>package</goal> -->
<!-- 	                    </goals> -->
<!-- 	                </execution> -->
<!-- 	            </executions> -->
<!-- 	            <configuration> -->
<!-- 	                <redeploy>true</redeploy> -->
<!-- 	            </configuration> -->
<!-- 	        </plugin> -->
    
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <executions>
		          <execution>
		            <id>run</id>
		            <goals>
		              <goal>java</goal>
		            </goals>
		            <configuration>
		              <mainClass>io.vertx.core.Launcher</mainClass>
		              <arguments>
		                <argument>run</argument>
		                <argument>${main.verticle}</argument>
		              </arguments>
		            </configuration>
		          </execution>

                    <execution>
                        <id>run-app</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
		                <configuration>
		                    <executable>java</executable>
		                    <arguments>
		                        <argument>-classpath</argument>
		                        <!-- automatically creates the classpath using all project dependencies,
		                             also adding the project build directory -->
		                        <classpath />
<!--                               <argument>${main.verticle}</argument> -->		                        
		                        <argument>-jar</argument>
<!--                               <argument>${project.build.directory}/${project.build.finalName}.jar</argument> -->
		                        <argument>${project.build.directory}/${project.artifactId}-${project.version}-fat.jar</argument>
		                    </arguments>
		                </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

	<profiles>
	  <profile>
	    <id>staging</id>
	    <repositories>
	      <repository>
	        <id>staging</id>
	        <url>https://oss.sonatype.org/content/repositories/snapshots</url>
	      </repository>
	    </repositories>
	  </profile>
	</profiles>
</project>
